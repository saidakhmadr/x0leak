import structlog
from aiogram import Router, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, LabeledPrice, InlineKeyboardMarkup, CallbackQuery, InputFile
from aiogram.utils.keyboard import InlineKeyboardBuilder
from fluent.runtime import FluentLocalization
import os
from aiogram.types.input_file import FSInputFile

# Declare router
router = Router()
router.message.filter(F.chat.type == "private")

# Declare logger
logger = structlog.get_logger()

# Constants
PAYMENT_AMOUNT = 399
SUBJECTS = ["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–§–∏–∑–∏–∫–∞", "–ò—Å—Ç–æ—Ä–∏—è", "–†—É—Å—Å–∫–∏–π"]

# Helper function to create welcome keyboard
def get_welcome_keyboard(l10n: FluentLocalization) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="–§–∞–π–ª—ã", callback_data="show_subjects")
    kb.button(text="–¢–ì –∫–∞–Ω–∞–ª", callback_data="show_channel")
    kb.adjust(1)
    return kb.as_markup()

# Helper function to create subjects keyboard
def get_subjects_keyboard() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    for subject in SUBJECTS:
        kb.button(text=subject, callback_data=f"subject_{subject}")
    kb.adjust(2)
    return kb.as_markup()

@router.message(CommandStart())
async def cmd_start(message: Message, l10n: FluentLocalization):
    await message.answer(
        "<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n\n"
        "<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:</b>\n"
        "1. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥:\n"
        "   ‚Ä¢ /math ‚Äî –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞\n"
        "   ‚Ä¢ /physics ‚Äî –§–∏–∑–∏–∫–∞\n"
        "   ‚Ä¢ /history ‚Äî –ò—Å—Ç–æ—Ä–∏—è\n"
        "   ‚Ä¢ /russian ‚Äî –†—É—Å—Å–∫–∏–π\n"
        "2. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /channel\n"
        "\n–ü—Ä–∏–º–µ—Ä: <code>/math</code>\n"
        "\n<b>–°–µ–π—á–∞—Å —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º ‚Äî –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤—ã–¥–∞—é—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ!</b>"
    )

@router.callback_query(F.data == "show_subjects")
async def show_subjects(callback: CallbackQuery, l10n: FluentLocalization):
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:",
        reply_markup=get_subjects_keyboard()
    )
    await callback.answer()

@router.callback_query(F.data == "show_channel")
async def show_channel(callback: CallbackQuery, l10n: FluentLocalization):
    await callback.message.edit_text(
        l10n.format_value("tg-channel-link")
    )
    await callback.answer()

@router.callback_query(F.data.startswith("subject_"))
async def process_subject_selection(callback: CallbackQuery, l10n: FluentLocalization):
    subject = callback.data.replace("subject_", "")
    
    # Create payment keyboard
    kb = InlineKeyboardBuilder()
    kb.button(
        text=l10n.format_value("payment-button-pay"),
        pay=True
    )
    kb.button(
        text=l10n.format_value("payment-button-cancel"),
        callback_data="cancel_payment"
    )
    kb.adjust(1)

    # Create invoice
    prices = [LabeledPrice(label="XTR", amount=PAYMENT_AMOUNT)]
    
    await callback.message.answer_invoice(
        title=l10n.format_value("payment-title"),
        description=l10n.format_value("payment-description", {"subject": subject}),
        prices=prices,
        provider_token="",  # Empty for Telegram Stars
        payload=f"subject_{subject}",
        currency="XTR",
        reply_markup=kb.as_markup()
    )
    await callback.answer()

@router.callback_query(F.data == "cancel_payment")
async def cancel_payment(callback: CallbackQuery, l10n: FluentLocalization):
    await callback.message.edit_text(
        l10n.format_value("payment-button-cancel")
    )
    await callback.answer()

@router.message(F.successful_payment)
async def process_successful_payment(message: Message, l10n: FluentLocalization):
    subject = message.successful_payment.invoice_payload.replace("subject_", "")
    await message.answer(
        f"<b>‚úÖ –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞!</b>\n–í–æ—Ç –≤–∞—à–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É: {subject}",
        message_effect_id="5159385139981059251"
    )
    # –ó–¥–µ—Å—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª—ã –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É
    # –ü—Ä–∏–º–µ—Ä:
    # if subject == "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞":
    #     await message.answer_document(document="file_id_1")
    #     await message.answer_document(document="file_id_2")

@router.message(Command("math"))
async def cmd_math(message: Message, l10n: FluentLocalization):
    prices = [LabeledPrice(label="XTR", amount=PAYMENT_AMOUNT)]
    await message.answer_invoice(
        title="–û–ø–ª–∞—Ç–∞ –∑–∞ –ú–∞—Ç–µ–º–∞—Ç–∏–∫—É",
        description="–û–ø–ª–∞—Ç–∞ –∑–∞ –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.",
        prices=prices,
        provider_token="",  # –î–ª—è Telegram Stars –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º
        payload="subject_math",
        currency="XTR"
    )

@router.message(Command("physics"))
async def cmd_physics(message: Message, l10n: FluentLocalization):
    prices = [LabeledPrice(label="XTR", amount=PAYMENT_AMOUNT)]
    await message.answer_invoice(
        title="–û–ø–ª–∞—Ç–∞ –∑–∞ –§–∏–∑–∏–∫—É",
        description="–û–ø–ª–∞—Ç–∞ –∑–∞ –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –ø–æ —Ñ–∏–∑–∏–∫–µ.",
        prices=prices,
        provider_token="",
        payload="subject_physics",
        currency="XTR"
    )

@router.message(Command("history"))
async def cmd_history(message: Message, l10n: FluentLocalization):
    prices = [LabeledPrice(label="XTR", amount=PAYMENT_AMOUNT)]
    await message.answer_invoice(
        title="–û–ø–ª–∞—Ç–∞ –∑–∞ –ò—Å—Ç–æ—Ä–∏—é",
        description="–û–ø–ª–∞—Ç–∞ –∑–∞ –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –ø–æ –∏—Å—Ç–æ—Ä–∏–∏.",
        prices=prices,
        provider_token="",
        payload="subject_history",
        currency="XTR"
    )

@router.message(Command("russian"))
async def cmd_russian(message: Message, l10n: FluentLocalization):
    prices = [LabeledPrice(label="XTR", amount=PAYMENT_AMOUNT)]
    await message.answer_invoice(
        title="–û–ø–ª–∞—Ç–∞ –∑–∞ –†—É—Å—Å–∫–∏–π",
        description="–û–ø–ª–∞—Ç–∞ –∑–∞ –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –ø–æ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É.",
        prices=prices,
        provider_token="",
        payload="subject_russian",
        currency="XTR"
    )

@router.message(Command("channel"))
async def cmd_channel(message: Message, l10n: FluentLocalization):
    await message.answer(
        "<b>üì¢ –ù–∞—à Telegram –∫–∞–Ω–∞–ª:</b>\nhttps://t.me/+RaohlL6nhwY2NTYx",
        parse_mode="HTML"
    )

@router.message(Command("proof"))
async def cmd_proof(message: Message, l10n: FluentLocalization):
    await message.answer(
       "–ú—ã –Ω–µ –Ω—É–∂–¥–∞–µ–º—Å—è –≤ —Ç–≤–æ–∏—Ö —Ä—É–±–ª—è—Ö. –ö–∞–∂–¥—ã–π —Ñ–∞–π–ª –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞—à–µ–π —Ü–µ–ø–æ—á–∫–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ —Å–≤–µ—Ä—è–µ—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏ –∏ —Ö—ç—à‚Äë—Å–≤–µ—Ä–∫–∞–º–∏. üîê\n"
        "–û–ø–ª–∞—Ç–∞ ‚Äî –Ω–µ –∑–∞ –¥–∞–Ω–Ω—ã–µ, –∞ —Ç–≤–æ–π –±–∏–ª–µ—Ç –≤ –∫—Ä—É–≥, –≥–¥–µ –ø—Ä–∞–≤–¥–∞ –Ω–µ –º–æ–ª—á–∏—Ç. üí°\n"
        "–ù–∏–∫–∞–∫–∏—Ö ¬´—Å–∫–∞—á–∞—Ç—å –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞¬ª ‚Äî —Ç–æ–ª—å–∫–æ –≥–∞—Ä–∞–Ω—Ç–∏–∏ –∏ —Ü–∏—Ñ—Ä–æ–≤–∞—è –ø–æ–¥–ø–∏—Å—å.\n"
        "–ù–µ —Ö–æ—á–µ—à—å –ø–ª–∞—Ç–∏—Ç—å ‚Äî –æ—Å—Ç–∞–≤–∞–π—Å—è –≤ —Ç–∏—à–∏–Ω–µ.\n"
        "–ü–ª–∞—Ç–∏—à—å ‚Äî –≤—Å—Ç—É–ø–∞–µ—à—å –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å, –≥–¥–µ –ª–æ–∂—å –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫—É.\n"
        "–í—ã–±–æ—Ä –∑–∞ —Ç–æ–±–æ–π. üö™üîí"
        "–ù–æ —Ä–∞–∑ —Ç—ã –Ω–∞—Å—Ç–∞–∏–≤–∞–µ—à—å, —Ç–æ –≤–æ—Ç —Ç–µ–±–µ –ø—Ä—É—Ñ—ã: "

    )
    folder = "tgbot"
    images = ["img1.png", "img2.png", "img3.png"]
    for img in images:
        path = os.path.join(folder, img)
        if os.path.isfile(path):
            await message.answer_photo(photo=FSInputFile(path))
        else:
            await message.answer(f"–§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {img}")

@router.message(Command("help"))
async def cmd_help(message: Message, l10n: FluentLocalization):
    await message.answer(
        "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è\n"
        "/help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ –ø–æ–º–æ—â—å\n"
        "/math ‚Äî –ø–æ–ª—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ\n"
        "/physics ‚Äî –ø–æ–ª—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ —Ñ–∏–∑–∏–∫–µ\n"
        "/history ‚Äî –ø–æ–ª—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –∏—Å—Ç–æ—Ä–∏–∏\n"
        "/russian ‚Äî –ø–æ–ª—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É\n"
        "/channel ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ Telegram-–∫–∞–Ω–∞–ª\n"
        "/proof ‚Äî –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –æ—Ç–∑—ã–≤—ã\n"
        "\n"
        "<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n"
        "1. –í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n"
        "2. –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞ (399 –∑–≤—ë–∑–¥).\n"
        "3. –î–æ—Å—Ç—É–ø –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª (500 –∑–≤—ë–∑–¥).\n"
        "4. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ñ–∞–π–ª—ã –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É.\n"
        "5. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help.\n\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏, –ø–∏—à–∏—Ç–µ —Å—é–¥–∞: @x0nHash\n"
        "–£–¥–∞—á–∏."
    
    )

@router.message(Command("refund"))
async def cmd_refund(message: Message, l10n: FluentLocalization):
    await message.answer(
        "–í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∏–ª–∞–º —Å–µ—Ä–≤–∏—Å–∞."
    ) 
    